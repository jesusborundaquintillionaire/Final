import java.util.*;
import java.io.*;

class Student implements Comparable<Student> {
    private String name;
    private String address;
    private double GPA;

    public Student(String name, String address, double GPA) {
        this.name = name;
        this.address = address;
        this.GPA = GPA;
    }

    public String getName() {
        return name;
    }

    public String toString() {
        return "Name: " + name + ", Address: " + address + ", GPA: " + GPA;
    }

    public int compareTo(Student other) {
        return this.name.compareTo(other.name);
    }
}

public class Final {
    public static void main(String[] args) throws IOException {
        LinkedList<Student> students = new LinkedList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            //this section here prompts the user to enter name, address, and lastly GPA.
            //the user can stop the program by simply entering exit in capitals or noncapital letters
            System.out.println("Enter student name (or 'exit' to finish):");
            String name = scanner.nextLine();
            if (name.equalsIgnoreCase("exit")) {
                break;
            }

            System.out.println("Enter student address:");
            String address = scanner.nextLine();

            double GPA;
            while (true) {
                System.out.println("Enter student GPA:");
                try {
                    GPA = Double.parseDouble(scanner.nextLine());
                    if (GPA < 0.0 || GPA > 4.0) {
                        System.out.println("Invalid GPA. Please enter a number between 0.0 and 4.0.");
                        continue;
                    }
                    break;
                } catch (NumberFormatException e) {
                    System.out.println("Invalid input. Please enter a number.");
                }
            }

            students.add(new Student(name, address, GPA));
        }

        Collections.sort(students);
        //The output will be put into a ".txt" file and sorted by student name
        PrintWriter writer = new PrintWriter(new File("students.txt"));
        for (Student student : students) {
            writer.println(student);
        }
        writer.close();

        System.out.println("Student data has been written to 'students.txt'.");
    }
}

//Selfnote: When opening "student.txt" file, go first to project folder.
//Selfnote: Right click project folder and go to new file.
//Selfnote: In file, go under "link to file in the system" and you should see "student.txt"
